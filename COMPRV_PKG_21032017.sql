create or replace PACKAGE COMPRV_PKG IS


PROCEDURE COMPRV_VLDR_AGENTE
 (P_SEGORG_ID IN NUMBER
 ,P_COMTPR_CUIT IN VARCHAR2
 ,P_ESCALAFON OUT VARCHAR2
 ,P_PLANTA OUT VARCHAR2
 ,P_DEPENDENCIA OUT VARCHAR2
 ,P_MINISTERIO OUT VARCHAR2
 ,P_RAZONSOCIAL OUT VARCHAR2
 ,P_FUNCIONCATEGORIA OUT VARCHAR2
 ,P_MOTIVO_ERROR OUT VARCHAR2
 );
/* Indica si el Documento por Tipo de Objeto ha sido presentado */
FUNCTION COMOBD_PRESENTADO_SN2
 (P_SEGORG_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 ,P_COMODT_ID IN NUMBER
 ,P_COMOBJ_ID IN NUMBER
 )
 RETURN NUMBER;
/* Indica si el Documento por Tipo de Objeto ha sido presentado */
FUNCTION COMOBD_PRESENTADO_SN3
 (P_SEGORG_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 ,P_COMODT_ID IN NUMBER
 ,P_COMOBJ_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Verificar si las autoridades del proveedor se encuentran vigentes */
FUNCTION COMPRA_COTIZAR_SN2
 (P_COMPRV_ID IN NUMBER
 ,P_COMPRT_ID IN NUMBER
 ,P_COMPCT_ID IN NUMBER
 )
 RETURN VARCHAR2;
FUNCTION COMPRV_COTIZAR_SN_2
 (P_COMPRV_ID IN NUMBER
 ,P_COMPRT_ID IN NUMBER
 ,P_COMCTT_ID IN NUMBER
 ,P_FECHA IN DATE := SYSDATE
 )
 RETURN VARCHAR2;
/* Habilitado para cotizar por rubro, por proveedor y contratacion */
FUNCTION COMPRV_HABILITADO_COTIZAR_SN_2
 (P_COMPRV_ID IN NUMBER
 ,P_COMPRT_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 ,P_COMCTT_ID IN NUMBER
 ,P_COMCON_ID IN NUMBER := null
 ,P_COMPCT_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Indica si se ha vencido la duración del cargo de una autoridad. */
FUNCTION COMPRA_VENCIDAS_SN2
 (P_COMPRV_ID IN NUMBER
 ,P_COMPCT_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Indica si se debe documentación de un Objeto */
FUNCTION COMOBJ_DEBE_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMOBJ_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Determinar si se emite el certificado. */
FUNCTION COMPRV_EMITIR_CRT_SN
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Recupera un registro desde la variable de paquete */
PROCEDURE COMCER_GET
 (P_COMCER OUT COM_CERTIFICADOS%ROWTYPE
 );
/* Inicializar la variable de paquete */
PROCEDURE COMCER_INI;
/* Insertar un registro en la tabla COM_CERTIFICADOS */
PROCEDURE COMCER_INS
 (P_COMCER IN COM_CERTIFICADOS%ROWTYPE
 );
/* Establecer la variable de paquete v_comcer */
PROCEDURE COMCER_SET
 (P_ID IN NUMBER
 );
/* Generar Invitaciones */
PROCEDURE COMCOI_GENERAR
 (P_COMCON_ID IN COM_CONTRATACIONES.ID%TYPE
 );
PROCEDURE COMCOI_GENERAR_RUB
 (P_COMCON_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 );
PROCEDURE COMCRT_GET
 (P_COMCRT OUT COM_CERTIFICADOS_TIPOS%ROWTYPE
 );
/* Inicializar la variable de paquete */
PROCEDURE COMCRT_INI;
/* Insertar registro en la tabla COM_CERTIFICADOS_TIPOS */
PROCEDURE COMCRT_INS
 (P_COMCRT IN COM_CERTIFICADOS_TIPOS%ROWTYPE
 );
/* Establecer la variable de paquete v_comcrt; */
PROCEDURE COMCRT_SET
 (P_ID IN number
 );
/* Establecer la variable de paquete v_comcrt */
PROCEDURE COMCRT_SET_CODIGO
 (P_CODIGO IN VARCHAR2
 );
/* Copiar una cotizacion existente de una contratacion */
PROCEDURE COMCTZ_COPIAR
 (P_COMCTZ_ID IN NUMBER
 ,P_COMCTZ_NUE OUT NUMBER
 );
/* Determina si es posible realizar una copia de la cotizacion */
FUNCTION COMCTZ_COPIAR_SN
 (P_COMCTZ_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Validar la copia de una cotizacion */
PROCEDURE COMCTZ_COPIAR_VLD
 (P_COMCTZ_ID IN NUMBER
 );
FUNCTION F_COMPRV_DATOS_WS
 (P_CUIT IN VARCHAR2
 )
 RETURN VARCHAR2;
/* ID del ultimo documento presentado del proveedor y tipo de documento */
FUNCTION COMOBD_COMPRV_OBTN_ID
 (P_COMODT_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 ,P_COMOBJ_ID IN NUMBER
 )
 RETURN NUMBER;
/* Obtener el valor de la variable v_comobd. */
PROCEDURE COMOBD_GET
 (P_COMOBD OUT COM_OBJETOS_DOC%ROWTYPE
 );
/* Inicializar la variable v_comobd. */
PROCEDURE COMOBD_INI;
/* Insertar registro en COM_OBJETOS_DOC. */
PROCEDURE COMOBD_INS
 (P_COMOBD IN COM_OBJETOS_DOC%ROWTYPE
 );
/* Indica si el Documento por Tipo de Objeto ha sido presentado */
FUNCTION COMOBD_PRESENTADO_SN
 (P_SEGORG_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 ,P_COMODT_ID IN NUMBER
 ,P_COMOBJ_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Setear la variable v_comobd. */
PROCEDURE COMOBD_SET
 (P_ID IN NUMBER
 );
/* Obtener el valor de la variable v_comobe. */
PROCEDURE COMOBE_GET
 (P_COMOBE OUT COM_OBJETOS_EST%ROWTYPE
 );
/* Inicializar la variable v_comobe. */
PROCEDURE COMOBE_INI;
/* Insertar registro en COM_OBJETOS_EST. */
PROCEDURE COMOBE_INS
 (P_COMOBE IN COM_OBJETOS_EST%ROWTYPE
 );
/* Setear la variable v_comobe. */
PROCEDURE COMOBE_SET
 (P_ID IN NUMBER
 );
/* Obtener el valor de la variable v_comobj. */
PROCEDURE COMOBJ_GET
 (P_COMOBJ OUT COM_OBJETOS%ROWTYPE
 );
/* Inicializar la variable v_comobj. */
PROCEDURE COMOBJ_INI;
/* Insertar registro en COM_OBJETOS. */
PROCEDURE COMOBJ_INS
 (P_COMOBJ IN COM_OBJETOS%ROWTYPE
 );
/* Setear la variable v_comobj. */
PROCEDURE COMOBJ_SET
 (P_ID IN NUMBER
 );
/* Obtener el valor de la variable v_comobt. */
PROCEDURE COMOBT_GET
 (P_COMOBT OUT COM_OBJETOS_TIPOS%ROWTYPE
 );
/* Inicializar la variable v_comobt. */
PROCEDURE COMOBT_INI;
/* Insertar registro en COM_OBJETOS_TIPOS. */
PROCEDURE COMOBT_INS
 (P_COMOBT IN COM_OBJETOS_TIPOS%ROWTYPE
 );
/* Setear la variable v_comobt. */
PROCEDURE COMOBT_SET
 (P_ID IN NUMBER
 );
/* Setear la variable v_comobt según codigo. */
PROCEDURE COMOBT_SET_CODIGO
 (P_SEGORG_ID IN NUMBER
 ,P_CODIGO IN VARCHAR2
 );
/* Indica si debe Documentacion de Objetos por tipo de Documento */
FUNCTION COMODT_DEBE_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMODT_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener el valor de la variable v_comodt. */
PROCEDURE COMODT_GET
 (P_COMODT OUT COM_OBJETOS_DOT%ROWTYPE
 );
/* Inicializar la variable v_comodt. */
PROCEDURE COMODT_INI;
/* Insertar registro en COM_OBJETOS_DOT. */
PROCEDURE COMODT_INS
 (P_COMODT IN COM_OBJETOS_DOT%ROWTYPE
 );
/* Setear la variable v_comodt. */
PROCEDURE COMODT_SET
 (P_ID IN NUMBER
 );
/* Setear la variable v_comodt según codigo. */
PROCEDURE COMODT_SET_CODIGO
 (P_SEGORG_ID IN NUMBER
 ,P_CODIGO IN VARCHAR2
 );
/* Obtener el valor de la variable v_comott. */
PROCEDURE COMOTT_GET
 (P_COMOTT OUT COM_OBJETOS_OTT%ROWTYPE
 );
/* Inicializar la variable v_comott. */
PROCEDURE COMOTT_INI;
/* Insertar un registro en COM_OBJETOS_OTT. */
PROCEDURE COMOTT_INS
 (P_COMOTT IN COM_OBJETOS_OTT%ROWTYPE
 );
/* Obtiene el Rubro para un Tipo de Documento de Objeto y Proveedor dados */
FUNCTION COMOTT_OBT_RUBROS
 (P_COMPRV_ID IN NUMBER
 ,P_COMODT_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Setear la variable v_comott. */
PROCEDURE COMOTT_SET
 (P_ID IN NUMBER
 );
/* Obtener el valor de la variable v_compad. */
PROCEDURE COMPAD_GET
 (P_COMPAD OUT COM_PROVEEDORES_ADO%ROWTYPE
 );
/* Inicializar la variable v_compad. */
PROCEDURE COMPAD_INI;
/* Insertar registro en  COM_PROVEEDORES_ADO. */
PROCEDURE COMPAD_INS
 (P_COMPAD IN COM_PROVEEDORES_ADO%ROWTYPE
 );
/* Seteo de la variable v_compad. */
PROCEDURE COMPAD_SET
 (P_ID IN NUMBER
 );
/* Obtener el valor de la variable v_compcc. */
PROCEDURE COMPCC_GET
 (P_COMPCC OUT COM_PROVEEDORES_CAR%ROWTYPE
 );
/* Inicializar la variable v_compcc. */
PROCEDURE COMPCC_INI;
/* Insertar registro en  COM_PROVEEDORES_CAR. */
PROCEDURE COMPCC_INS
 (P_COMPCC IN COM_PROVEEDORES_CAR%ROWTYPE
 );
/* Seteo de la variable v_compcc. */
PROCEDURE COMPCC_SET
 (P_ID IN NUMBER
 );
PROCEDURE COMPCC_SET_CODIGO
 (P_CODIGO IN VARCHAR2
 ,P_COMPCT_ID IN NUMBER
 );
/* Recupera el registro seleccionado desde la variable de paquete */
PROCEDURE COMPCF_GET
 (P_COMPCF OUT COM_PROVEEDORES_CLF%ROWTYPE
 );
/* Inicializacion de la variable de paquete */
PROCEDURE COMPCF_INI;
/* Inserta un nuevo registro en la tabla */
PROCEDURE COMPCF_INS
 (P_COMPCF IN COM_PROVEEDORES_CLF%ROWTYPE
 );
PROCEDURE COMPCF_SET
 (P_ID IN NUMBER
 );
PROCEDURE COMPCF_SET_CODIGO
 (P_CODIGO IN VARCHAR2
 ,P_SEGORG_ID IN NUMBER
 );
PROCEDURE COMPCF_SET_NOMBRE
 (P_NOMBRE IN VARCHAR2
 ,P_SEGORG_ID IN NUMBER
 );
/* Obtener el valor de la variable v_compct. */
PROCEDURE COMPCT_GET
 (P_COMPCT OUT COM_PROVEEDORES_CAT%ROWTYPE
 );
/* Inicializar la variable v_compct. */
PROCEDURE COMPCT_INI;
/* Insertar registro en  COM_PROVEEDORES_CAT. */
PROCEDURE COMPCT_INS
 (P_COMPCT IN COM_PROVEEDORES_CAT%ROWTYPE
 );
/* Seteo de la variable v_compct. */
PROCEDURE COMPCT_SET
 (P_ID IN NUMBER
 );
PROCEDURE COMPCT_SET_CODIGO
 (P_CODIGO IN VARCHAR2
 ,P_COMPRT_ID IN NUMBER
 );
/* .Documentos presentados por Contrataciones */
FUNCTION COMPDO_COMCTT_PRESENTADOS_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMCTT_ID IN NUMBER
 ,P_FECHA IN DATE := 'SYSDATE'
 )
 RETURN VARCHAR2;
/* .Documentos presentados por Rubro */
FUNCTION COMPDO_COMRUB_PRESENTADOS_SN
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* . Obtener la fecha de Vencimiento para un Tipo de Documento */
FUNCTION COMPDT_OBTN_FECHA_VENC
 (P_SEGORG_ID IN NUMBER
 ,P_COMPDT_ID IN NUMBER
 ,P_FECHA_EMISION IN DATE := 'sysdate'
 )
 RETURN DATE;
/* Recuperar un registro desde la variable de paquete */
PROCEDURE COMPPF_GET
 (P_COMPPF OUT COM_COMPRV_COMPCF%ROWTYPE
 );
/* Inicializa la variable de paquete */
PROCEDURE COMPPF_INI;
PROCEDURE COMPPF_INS
 (P_COMPPF IN COM_COMPRV_COMPCF%ROWTYPE
 );
PROCEDURE COMPPF_SET
 (P_ID IN NUMBER
 );
/* Verificar si las autoridades del proveedor se encuentran vigentes */
FUNCTION COMPRA_COTIZAR_SN
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Determinar si una autoridad debe documentación. */
FUNCTION COMPRA_DEBE_SN
 (P_COMPRA_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener el valor de la variable v_compra. */
PROCEDURE COMPRA_GET
 (P_COMPRA OUT COM_PROVEEDORES_AUT%ROWTYPE
 );
/* Inicializar la variable v_compra. */
PROCEDURE COMPRA_INI;
/* Insertar registro en  COM_PROVEEDORES_AUT. */
PROCEDURE COMPRA_INS
 (P_COMPRA IN COM_PROVEEDORES_AUT%ROWTYPE
 );
/* Obtener situación del documento de autoridad */
FUNCTION COMPRA_COMPDT_OBT_SITUACION
 (P_COMPRA_ID IN NUMBER
 ,P_COMPDT_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener situación del documento de autoridad con formato */
FUNCTION COMPRA_COMPDT_OBT_SIT_FMT
 (P_COMPRA_ID IN NUMBER
 ,P_COMPDT_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Buscar si se encuentra el registro solicitado en las autoridades */
FUNCTION COMPRA_OBTN_AUT_SN
 (P_TIPO_DOCUMENTO IN COM_PROVEEDORES_AUT.TIPO_DOCUMENTO%TYPE
 ,P_NUMERO_DOCUMENTO IN COM_PROVEEDORES_AUT.NUMERO_DOCUMENTO%TYPE
 ,P_NOMBRE IN COM_PROVEEDORES_AUT.NOMBRE%TYPE
 ,P_APELLIDO IN COM_PROVEEDORES_AUT.APELLIDO%TYPE
 ,P_SITUACION IN COM_PROVEEDORES_AUT.SITUACION%TYPE
 )
 RETURN VARCHAR2;
/* Seteo de la variable v_compra. */
PROCEDURE COMPRA_SET
 (P_ID IN NUMBER
 );
/* Indica si se ha vencido la duración del cargo de una autoridad. */
FUNCTION COMPRA_VENCIDAS_SN
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtiene el valor de la variable de paquete */
PROCEDURE COMPRG_GET
 (P_COMPRG OUT COM_PROVEEDORES_RGP%ROWTYPE
 );
/* Inicializa la variable de paquete */
PROCEDURE COMPRG_INI;
/* Inserta un nuevo registro en COM_PROVEEDORES_RGP */
PROCEDURE COMPRG_INS
 (P_COMPRG IN COM_PROVEEDORES_RGP%ROWTYPE
 );
/* Establece la variable de paquete */
PROCEDURE COMPRG_SET
 (P_ID IN NUMBER
 );
FUNCTION COMPRG_HABILITAR_SN
 (P_COMPRG_ID IN NUMBER
 ,P_SEGUSU_TIPO IN VARCHAR2
 ,P_COMECO_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Suspender proveedor para un Tipo de Registro. */
PROCEDURE COMPRG_SUSPENDER
 (P_COMPRV_ID IN NUMBER
 ,P_COMRGP_ID IN NUMBER
 ,P_MOTIVO IN VARCHAR2
 );
FUNCTION COMPRG_SUSPENDER_SN
 (P_COMPRG_ID IN NUMBER
 ,P_SEGUSU_TIPO IN VARCHAR2
 ,P_COMECO_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener si un proveedor esta de baja en el periodo para el rubro */
FUNCTION COMPRR_HABILITADO_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 ,P_FECHA_INICIO_CTZ IN DATE
 ,P_FECHA_FIN_CTZ IN DATE
 )
 RETURN VARCHAR2;
/* Alta de Responsable de Proveedor */
PROCEDURE COMPRS_ALTA
 (P_SEGORG_CODIGO IN SEG_ORGANIZACIONES.CODIGO%TYPE
 ,P_COMPRV_ID IN COM_PROVEEDORES.ID%TYPE
 ,P_COMRST_ID IN COM_RESPONSABLES_TIPOS.ID%TYPE
 ,P_SEGPRS_NOMBRE IN COM_RESPONSABLES.NOMBRE%TYPE
 ,P_SEGPRS_TIPO_DOCUMENTO IN COM_RESPONSABLES.TIPO_DOCUMENTO%TYPE
 ,P_SEGPRS_NUMERO_DOCUMENTO IN COM_RESPONSABLES.NUMERO_DOCUMENTO%TYPE
 ,P_SEGPRS_EMAIL IN COM_RESPONSABLES.EMAIL%TYPE
 ,P_SEGPRS_OBSERVACIONES IN COM_RESPONSABLES.OBSERVACION%TYPE
 ,P_SEGUSU_USUARIO IN SEG_USUARIOS.USUARIO%TYPE
 ,P_SEGROL_CODIGO IN SEG_ROLES.CODIGO%TYPE
 ,P_SEGAPL_CODIGO IN SEG_APLICACIONES.CODIGO%TYPE
 ,P_SEGUSU_ID OUT NUMBER
 ,P_RESULTADO OUT VARCHAR2
 );
/* Dar de Baja a un Responsable de Proveedor */
PROCEDURE COMPRS_BAJA
 (P_COMPRS_ID IN COM_PROVEEDORES_RES.ID%TYPE
 ,P_RESULTADO OUT VARCHAR2
 );
/* Obtener el valor de la variable v_comprs */
PROCEDURE COMPRS_GET
 (P_COMPRS OUT COM_PROVEEDORES_RES%ROWTYPE
 );
PROCEDURE COMPRS_INI;
/* Insertar registro en COM_PROVEEDORES_RES */
PROCEDURE COMPRS_INS
 (P_COMPRS IN COM_PROVEEDORES_RES%ROWTYPE
 );
/* Seteo de la variable v_comprs */
PROCEDURE COMPRS_SET_RESP
 (P_COMRES_ID IN COM_PROVEEDORES_RES.COMRES_ID%TYPE
 ,P_COMPRV_ID IN COM_PROVEEDORES.ID%TYPE
 ,P_SEGUSU_ID IN NUMBER
 );
/* Seteo de la variable v_comprs */
PROCEDURE COMPRS_SET
 (P_ID IN COM_PROVEEDORES_RES.ID%TYPE
 );
PROCEDURE COMPRV_ACTUALIZAR
 (P_COMPRV_ID IN NUMBER
 ,P_COMDOM_ID IN NUMBER
 ,P_COMPRV_EMAIL IN VARCHAR2
 ,P_COMDOM_TEL_CODIGO_AREA IN VARCHAR2
 ,P_COMDOM_TEL_NUMERO IN VARCHAR2
 );
PROCEDURE COMPRV_ACTUALIZAR_VLD
 (P_COMPRV_ID IN NUMBER
 ,P_COMDOM_ID IN NUMBER
 ,P_COMPRV_EMAIL IN VARCHAR2
 ,P_COMDOM_TEL_CODIGO_AREA IN VARCHAR2
 ,P_COMDOM_TEL_NUMERO IN VARCHAR2
 );
/* el proveedor puede cotizar si no debe doc en ningun objeto y rubro */
FUNCTION COMPRV_COMOBJ_COTIZAR_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER := null
 )
 RETURN VARCHAR2;
/* Devuelve los tipos de documentos requeridos para el proveedor */
FUNCTION COMPRV_COMPDT_REQUERIDO_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMPDT_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener la lista de Situacion de un Proveedor con sus Registros */
FUNCTION COMPRV_COMPRG_OBT_SIT
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Indica si permite cotizar por proveedor para un rubro dado */
FUNCTION COMPRV_COMRUB_COTIZAR_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 ,P_FECHA IN DATE := SYSDATE
 )
 RETURN VARCHAR2;
FUNCTION COMPRV_COTIZAR_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMCTT_ID IN NUMBER
 ,P_FECHA IN DATE := SYSDATE
 )
 RETURN VARCHAR2;
/* Permite Cotizar si el proveedor no debe documentacion en ningun rubro */
FUNCTION COMPRV_COTIZAR_RUB_SN
 (P_COMPRV_ID IN NUMBER
 ,P_FECHA IN DATE := SYSDATE
 )
 RETURN VARCHAR2;
PROCEDURE COMPRV_DATOS_WS
 (P_CUIT IN VARCHAR2
 ,P_RAZON_SOCIAL OUT VARCHAR2
 ,P_CONDICION_IB OUT VARCHAR2
 ,P_CBU OUT VARCHAR2
 ,P_EMAIL OUT VARCHAR2
 ,P_NRO_INSCRIP_IB OUT VARCHAR2
 ,P_FEC_INSCRIP_IB OUT VARCHAR2
 ,P_NRO_CML OUT VARCHAR2
 ,P_CALLE OUT VARCHAR2
 ,P_NUMERO_CASA OUT VARCHAR2
 ,P_PISO OUT VARCHAR2
 ,P_DPTO OUT VARCHAR2
 ,P_LOCALIDAD OUT VARCHAR2
 ,P_DEPARTAMENTO OUT VARCHAR2
 ,P_PROVINCIA OUT VARCHAR2
 ,P_PAIS OUT VARCHAR2
 ,P_CODIGO_POSTAL OUT VARCHAR2
 ,P_TEL_CODIGO_AREA OUT VARCHAR2
 ,P_TEL_NUMERO OUT VARCHAR2
 );
/* Registrar archivo firmado digitalmente en Doc Proveedores */
PROCEDURE COMPRV_DOCPRV_REGISTRAR
 (P_PARAMETROS IN VARCHAR2
 ,P_ARCHIVO IN BLOB
 );
/* Obtener el valor de la variable v_comprv */
PROCEDURE COMPRV_GET
 (P_COMPRV OUT COM_PROVEEDORES%ROWTYPE
 );
/* Habilitado para cotizar por rubro, por proveedor y contratacion */
FUNCTION COMPRV_HABILITADO_COTIZAR_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 ,P_COMCTT_ID IN NUMBER
 ,P_COMCON_ID IN NUMBER := null
 )
 RETURN VARCHAR2;
PROCEDURE COMPRV_INI;
/* Insertar registro en COM_PROVEEDORES */
PROCEDURE COMPRV_INS
 (P_COMPRV IN COM_PROVEEDORES%ROWTYPE
 );
/* Obtener Nombre de Rubros por proveedor */
FUNCTION COMPRV_OBTN_COMRUB
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Restablecer Contraseña No logueado */
PROCEDURE COMPRV_RESCLV_OFF
 (P_COMPRV_ID IN NUMBER
 ,P_COMRES_ID IN NUMBER
 );
/* Obtener el detalle de la baja para un Proveedor */
FUNCTION COMPRV_OBTN_BAJ
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener la lista de Suspensiones para un Proveedor */
FUNCTION COMPRV_OBTN_SUS
 (P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener el estado de Deuda en DPIP y dejar un log de cada consulta. */
PROCEDURE COMPRV_REGISTRAR_DPIP
 (P_TIPO_DOCUMENTO IN VARCHAR2
 ,P_NRO_DOCUMENTO IN VARCHAR2
 ,P_FECHA IN DATE
 ,P_MENSAJE OUT VARCHAR2
 );
/* Comprobar si el servicio web esta activo */
FUNCTION COMPRV_REGISTRAR_DPIP_VLD
 (P_URL IN VARCHAR2
 ,P_PROXY IN VARCHAR2
 )
 RETURN CLOB;
/* Restablecer Contraseña */
PROCEDURE COMPRV_RESCLV
 (P_COMPRV_ID IN NUMBER
 ,P_COMRES_ID IN NUMBER
 );
/* Proveedor con rubro habilitado para cotizar en proceso */
FUNCTION COMPRV_RUBROHAB_SN
 (P_COMPRV_ID IN NUMBER
 ,P_COMCON_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Proveedor con rubro habilitado para cotizar en proceso */
FUNCTION COMPRV_RUBRO_SITUACION
 (P_COMPRV_ID IN NUMBER
 ,P_COMCON_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Seteo la variable v_comprv */
PROCEDURE COMPRV_SET
 (P_ID IN COM_PROVEEDORES.ID%TYPE
 );
/* Anular un registro del Estado de Proveedores */
PROCEDURE COMPRE_ANULAR
 (P_COMPRE_ID IN NUMBER
 ,P_MOTIVO_SITUACION IN VARCHAR2
 );
PROCEDURE COMPRE_ANULAR_VLD
 (P_COMPRE_ID IN NUMBER
 ,P_MOTIVO_SITUACION IN VARCHAR2
 );
FUNCTION COMPRE_OBTN_ID
 (P_COMPRV_ID IN NUMBER
 ,P_FECHA IN DATE := sysdate
 )
 RETURN NUMBER;
PROCEDURE COMPRE_GET
 (P_COMPRE OUT COM_PROVEEDORES_EST%ROWTYPE
 );
/* Insertar registro en COM_PROVEEDORES_EST */
PROCEDURE COMPRE_INS
 (P_COMPRE IN COM_PROVEEDORES_EST%ROWTYPE
 );
PROCEDURE COMPRE_INI;
PROCEDURE COMPRE_SET
 (P_ID IN NUMBER
 );
/* Obtener los rubros para un tipo de documento y un tipo de proveedor */
FUNCTION COMPTT_OBTN_RUBROS
 (P_COMPRV_ID IN NUMBER
 ,P_COMPDT_ID IN NUMBER
 ,P_VER_OBLIGATORIO_SN IN VARCHAR2 := 'NO'
 )
 RETURN VARCHAR2;
/* Indica si un tipo de documento es obligatorio para un tipo proveedor */
FUNCTION COMPTT_OBLCTZ_SN
 (P_COMPRT_ID IN NUMBER
 ,P_COMPDT_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Obtener la cantidad de Rubros por Categoria dado un rubro. */
FUNCTION COMRBC_OBTN_CANT_RUB
 (P_COMRUB_ID IN NUMBER
 )
 RETURN INTEGER;
FUNCTION COMRBC_PRV_INS_SN
 (P_COMRBC_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 )
 RETURN VARCHAR2;
PROCEDURE COMRUB_GET
 (P_COMRUB OUT COM_RUBROS%ROWTYPE
 );
FUNCTION COMRUB_AGREGAR_SN
 (P_COMRUB_ID IN NUMBER
 )
 RETURN VARCHAR2;
PROCEDURE COMRUB_INI;
PROCEDURE COMRUB_INS
 (P_COMRUB IN COM_RUBROS%ROWTYPE
 );
PROCEDURE COMRUB_SET
 (P_ID IN NUMBER
 );
PROCEDURE COMRUB_SET_NOMBRE
 (P_SEGORG_ID IN NUMBER
 ,P_NOMBRE IN VARCHAR2
 );
PROCEDURE COMRUB_SET_CODIGO
 (P_SEGORG_ID IN NUMBER
 ,P_CODIGO IN NUMBER
 );
/* Obtener el valor de la variable v_comruo. */
PROCEDURE COMRUO_GET
 (P_COMRUO OUT COM_RUBROS_OBJ%ROWTYPE
 );
/* Inicializar la variable v_comruo. */
PROCEDURE COMRUO_INI;
/* Insertar registro en COM_RUBROS_OBJ. */
PROCEDURE COMRUO_INS
 (P_COMRUO IN COM_RUBROS_OBJ%ROWTYPE
 );
/* Setear la variable v_comruo. */
PROCEDURE COMRUO_SET
 (P_ID IN NUMBER
 );
PROCEDURE COMOBJ_CREAR
 (P_SEGORG_ID IN NUMBER
 ,P_COMOBT_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 ,P_CODIGO IN VARCHAR2
 ,P_NOMBRE IN VARCHAR2
 ,P_DESCRIPCION IN VARCHAR2
 ,P_OBSERVACION IN VARCHAR2
 ,P_COMOBJ_ID OUT NUMBER
 );
PROCEDURE COMOBJ_CREAR_VLD
 (P_SEGORG_ID IN NUMBER
 ,P_COMOBT_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 ,P_COMRUB_ID IN NUMBER
 ,P_CODIGO IN VARCHAR2
 ,P_NOMBRE IN VARCHAR2
 ,P_DESCRIPCION IN VARCHAR2
 ,P_OBSERVACION IN VARCHAR2
 );
PROCEDURE COMTDP_GET
 (P_COMTDP OUT COM_TRAMITES_PRV_DOC%ROWTYPE
 );
PROCEDURE COMTDP_INI;
PROCEDURE COMTDP_INS
 (P_COMTDP IN COM_TRAMITES_PRV_DOC%ROWTYPE
 );
PROCEDURE COMTDP_SET
 (P_ID IN NUMBER
 );
PROCEDURE COMTRN_INS
 (P_COMTRN IN COM_TRAMITES_PRV_NOT%ROWTYPE
 );
/* Encripta un procesador */
FUNCTION ENCRIPTAR_CLAVE
 (P_STRING IN VARCHAR2
 ,P_CLAVE IN VARCHAR2
 ,P_ALGORITMO IN PLS_INTEGER := null
 )
 RETURN VARCHAR2;
/* Cifrado de parametros para servicio de Firma Digital */
FUNCTION ENCRIPTAR_PARAMETROS
 (P_PARAMETROS IN VARCHAR2
 )
 RETURN VARCHAR2;
/* Insertar registro en COM_RESPONSABLES */
PROCEDURE INS_COMRES
 (P_COMRES IN COM_RESPONSABLES%ROWTYPE
 );
FUNCTION OBTN_COMCTZ_PRE
 (P_COMPRV_ID IN NUMBER
 ,P_COMCON_ID IN NUMBER
 )
 RETURN INTEGER;
/* Obtener el estado de la Documentacion de Objeto de Rubro con formato */
FUNCTION COMOBD_OBTN_ESTADO
 (P_SEGORG_ID IN NUMBER
 ,P_COMPRV_ID IN NUMBER
 ,P_COMODT_ID IN NUMBER
 ,P_COMOBJ_ID IN NUMBER
 )
 RETURN VARCHAR2;
/* Indica si presenta Deuda en DPIP DBLink */
FUNCTION OBTN_COMPRV_ADEUDA_DPIP_DB_SN
 (P_TIPO_DOCUMENTO IN VARCHAR2
 ,P_NRO_DOCUMENTO IN VARCHAR2
 ,P_FECHA IN DATE
 )
 RETURN VARCHAR2;
/* Indica si presenta Deuda en DPIP */
FUNCTION OBTN_COMPRV_ADEUDA_DPIP_SN
 (P_TIPO_DOCUMENTO IN VARCHAR2
 ,P_NRO_DOCUMENTO IN VARCHAR2
 ,P_FECHA IN DATE
 )
 RETURN VARCHAR2;
/* Obtiene la Contraseña por defecto para el Usuario */
FUNCTION OBTN_CONTRASENIA
 (P_NOMBRE IN VARCHAR2
 ,P_NUMERO_DOCUMENTO IN VARCHAR2
 )
 RETURN VARCHAR2;
FUNCTION OBTN_PERIODO_SUS
 (P_ORIGEN IN DATE
 ,P_FINAL IN DATE
 )
 RETURN VARCHAR2;
END COMPRV_PKG;
